#!/bin/bash
# toolset.sh
# Chromebook lenovo 11e GalliumOS script collection
#
# This script does different things for the lenovo yoga 11e, eyerything can be changed to your explicit device
# parameters:
# -t tabletmode; rotating the screen and touchscreen input 180 degrees, disables touchpad,enable virtual keyboard (onboard)
# -a increases volume by 5% / value can be changed in incvol line 20
# -e decreases volume by 5% / value can be changed in decvol line 21
# -s toggles touchscreen input on/off
#
# created by sargantana
#
#
#################################################################################################################################
#																																#
#													<CONFIGURATION>																#
#																																#
#################################################################################################################################
#
# use xinput in a terminal to get device IDs 
# predefined for lenovo chromebook yoga 11e

TouchscreenDevice='12'	# obviously this is the ID for the touchscreen
TouchpadDevice='11'		# obviously this is the ID for the touchpad
KeyboardDevice='13'		# obviously this is the ID for the keyboard
incvol='5'				# define by how many percent per execution volume should be increased (preset 5%)
decvol='5'				# define by how many percent per execution volume should be decreased (preset 5%)


##################################################################################################################################


# this is just to display help by executing toolset.sh -h

if [ "$1" = "--help"  ] || [ "$1" = "-h"  ];then
echo 'Usage: toolset.sh [OPTION]'
echo 'This script sums some useful functions for a yoga chromebook'

echo Usage:
echo ' -t toggles between tablet mode:'
echo ' rotates screen by 180 degrees for tablet mode, inverses touchscreen input,'
echo ' disables keyboard, disables touchpad, starts onboard screen keyboard and easystroke'
echo ' -s toggles Touchscreen between on / off'
echo ' -e decreases volume by set value'
echo ' -a increases volume by set value'
exit 0
fi

# get states of devices

	touchpadEnabled=$(xinput --list-props "$TouchpadDevice" | awk '/Device Enabled/{print $NF}')
	screenMatrix=$(xinput --list-props "$TouchscreenDevice" | awk '/Coordinate Transformation Matrix/{print $5$6$7$8$9$10$11$12$NF}')
	touchscreenstate=$(xinput list-props "$TouchscreenDevice" | grep "Device Enabled" | grep -o "[01]$")

	# Matrix for normal input   / this is used for touchpad and touchscreen
	# [  1  0  0  ]
	# [  0  1  0  ]
	# [  0  0  1  ]

	normal='1 0 0 0 1 0 0 0 1'
	normalfl='1.000000,0.000000,0.000000,0.000000,1.000000,0.000000,0.000000,0.000000,1.000000'

	# Matrix for left input		/ this is used for touchpad and touchscreen
	# [  0 -1  1  ]
	# [  1  0  0  ]
	# [  0  0  1  ]

	left='0 -1 1 1 0 0 0 0 1'
	leftfl='0.000000 -1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 0.000000 1.000000'


	# Matrix for right input  	/ this is used for touchpad and touchscreen
	# [  0  1  0  ]
	# [ -1  0  1  ]
	# [  0  0  1  ]

	right='0 1 0 -1 0 1 0 0 1'
	rightfl='0.000000 1.000000 0.000000 -1.000000 0.000000 1.000000 0.000000 0.000000 1.000000'

	# Matrix for inverse input  / this is used for touchpad and touchscreen
	# [ -1  0  1  ]
	# [  0 -1  1  ]
	# [  0  0  1  ]

	inverted='-1 0 1 0 -1 1 0 0 1'
	invertedfl='-1.000000,0.000000,1.000000,0.000000,-1.000000,1.000000,0.000000,0.000000,1.000000'

# function code starts here 

# TABLETMODE


						# This part of the script first checks if the screen is in normal use

if [ "$1" = "-t" ];then
	if [ $screenMatrix == $normalfl ];then
						# If display is oriented normal and script is called, turn upside down, 
						# disable keyboard & touchpad, rotate touchscreen input matrix, start onboard
  			echo "tablet mode"
  			xrandr -o inverted
  			xinput set-prop "$TouchscreenDevice" 'Coordinate Transformation Matrix' $inverted
  			xinput disable "$TouchpadDevice"
  			xinput disable "$KeyboardDevice"
  			easystroke
			onboard &
	else 				# If display is oriented inverted and script is called, everything back to normal
  		echo "normal"
  		xrandr -o normal
  		xinput set-prop "$TouchscreenDevice" 'Coordinate Transformation Matrix' $normal
  		xinput enable "$TouchpadDevice"
  		xinput enable "$KeyboardDevice"
 		killall easystroke
		killall onboard
 	fi
fi

# EBOOK READER MODE

if [ "$1" = "-b" ];then
	if [ $screenMatrix == $normalfl ];then
						# If display is oriented normal and script is called, turn left, 
						# disable keyboard & touchpad, rotate touchscreen input matrix, start easystroke
  			echo "left"
  			xrandr -o left
  			xinput set-prop "$TouchscreenDevice" 'Coordinate Transformation Matrix' $left
  			xinput disable "$TouchpadDevice"
  			xinput disable "$KeyboardDevice"
  			easystroke
  			killall onboard		# sometimes onboard keeps on screen

	else 				# If display is oriented left and script is called, everything back to normal
  		echo "normal"
  		xrandr -o normal
  		xinput set-prop "$TouchscreenDevice" 'Coordinate Transformation Matrix' $normal
  		xinput enable "$TouchpadDevice"
  		xinput enable "$KeyboardDevice"
 		killall easystroke
 		killall onboard			# sometimes onboard keeps on screen
 	fi
fi

# TOGGLE TOUCHSCREEN 

if [ "$1" = "-s" ];then
						# If Touchscreen is enabled and script is called, disable Touchscreen
		if [ $touchscreenstate == '1' ];then
				xinput --disable $TouchscreenDevice
			else 		# If Touchscreen is diabled and script is called, enable Touchscreen
				xinput --enable $TouchscreenDevice
		fi

fi


# VOLUME CONTROL

if [ "$1" = "-e" ];then
						# If script is called, decrease volume by 5%
				amixer -D pulse sset Master "$decvol"%-

fi



if [ "$1" = "-a" ];then
						# If script is called, increse volume by 5%
				amixer -D pulse sset Master "$incvol"%+
fi
